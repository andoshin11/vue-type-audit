// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformers transformScript 1`] = `
"import { ClassInstance, __createVNodeFromExternalComponent, _VNodeProps, PropTypes, _VNode, _VNodeTypes, _ClassComponent, _Data } from \\"__GLOBAL_TYPES\\";

import { ref, defineComponent } from 'vue'
import HelloWorld from './HelloWorld.vue'

const __Component = defineComponent({
  components: {
    HelloWorld
  },
  setup(props) {
    const count = ref(0)
    const inc = () => {
      count.value++
    }
    console.log(count.value.length)

    return {
      count,
      inc
    }
  }
})


type __ExternalComponents = {
_component_HelloWorld: ClassInstance<typeof HelloWorld>;
}

type __ResolveComponentNames = {
HelloWorld: '_component_HelloWorld';
}


export default __Component;
type __ComponentType = ClassInstance<typeof __Component>;


declare function _createVNode<N extends (keyof __ExternalComponents | _VNodeTypes | _ClassComponent), C = N extends keyof __ExternalComponents ?  __ExternalComponents[N] : unknown>(type: N, ...args: (N extends keyof __ExternalComponents ? {} extends PropTypes<C> ? [(_VNodeProps & PropTypes<C>)?, unknown?, number?, (string[] | null)?] : [(_VNodeProps & PropTypes<C>), unknown?, number?, (string[] | null)?] : [((_Data & _VNodeProps) | null)?, unknown?, number?, (string[] | null)?])): _VNode;

declare function _resolveComponent<N extends (keyof __ResolveComponentNames | string)>(name: N): N extends keyof __ResolveComponentNames ? __ResolveComponentNames[N] : string

import { createVNode as #createVNode, toDisplayString as _toDisplayString, resolveComponent as #resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \\"vue\\"

function render(_ctx: __ComponentType) {
  const _component_HelloWorld = _resolveComponent(\\"HelloWorld\\")

  return (_openBlock(), _createBlock(\\"div\\", null, [
    _createVNode(\\"img\\", { src: \\"./logo.png\\" }),
    _createVNode(\\"h1\\", null, \\"Hello Vue 3!\\"),
    _createVNode(\\"button\\", { onClick: _ctx.inc }, \\"Clicked \\" + _toDisplayString(_ctx.count.length) + \\" times.\\", 9 /* TEXT, PROPS */, [\\"onClick\\"]),
    _createVNode(_component_HelloWorld)
  ]))
}"
`;

exports[`transformers transformScript 2`] = `
"import { ClassInstance, __createVNodeFromExternalComponent, _VNodeProps, PropTypes, _VNode, _VNodeTypes, _ClassComponent, _Data } from \\"__GLOBAL_TYPES\\";

import { defineComponent } from 'vue'

const __Component = defineComponent({
  props: {
    msg: {
      type: String,
      required: true
    }
  }
})


type __ExternalComponents = {}

type __ResolveComponentNames = {}


export default __Component;
type __ComponentType = ClassInstance<typeof __Component>;


declare function _createVNode<N extends (keyof __ExternalComponents | _VNodeTypes | _ClassComponent), C = N extends keyof __ExternalComponents ?  __ExternalComponents[N] : unknown>(type: N, ...args: (N extends keyof __ExternalComponents ? {} extends PropTypes<C> ? [(_VNodeProps & PropTypes<C>)?, unknown?, number?, (string[] | null)?] : [(_VNodeProps & PropTypes<C>), unknown?, number?, (string[] | null)?] : [((_Data & _VNodeProps) | null)?, unknown?, number?, (string[] | null)?])): _VNode;

declare function _resolveComponent<N extends (keyof __ResolveComponentNames | string)>(name: N): N extends keyof __ResolveComponentNames ? __ResolveComponentNames[N] : string

import { toDisplayString as _toDisplayString, createVNode as #createVNode, openBlock as _openBlock, createBlock as _createBlock } from \\"vue\\"

function render(_ctx: __ComponentType) {
  return (_openBlock(), _createBlock(\\"div\\", null, [
    _createVNode(\\"h1\\", null, _toDisplayString(_ctx.msg), 1 /* TEXT */)
  ]))
}"
`;

exports[`transformers transformScript 3`] = `
Map {
  "test.vue.template.ts" => Object {
    "map": Object {
      "file": "test.vue",
      "mappings": ";AAEA;AACA;AACA",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "test.vue",
      ],
      "sourcesContent": Array [
        "
<template>
  <div>
    <h1>{{ msg }}</h1>
  </div>
</template>

<script lang=\\"ts\\">
import { defineComponent } from 'vue'

export default defineComponent({
  props: {
    msg: {
      type: String,
      required: true
    }
  }
})
</script>
    ",
      ],
      "version": 3,
    },
  },
  "test.vue.template.compiled.ts" => Object {
    "map": Object {
      "mappings": ";;;wBACE,aAEM;IADJ,aAAkB,6BAAXA,QAAG",
      "names": Array [
        "msg",
      ],
      "sources": Array [
        "test.vue.template.ts",
      ],
      "sourcesContent": Array [
        "
  <div>
    <h1>{{ msg }}</h1>
  </div>
",
      ],
      "version": 3,
    },
  },
  "test.vue.script.ts" => Object {
    "map": Object {
      "file": "test.vue.script.ts",
      "mappings": ";AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "test.vue",
      ],
      "sourcesContent": Array [
        "
<template>
  <div>
    <h1>{{ msg }}</h1>
  </div>
</template>

<script lang=\\"ts\\">
import { defineComponent } from 'vue'

export default defineComponent({
  props: {
    msg: {
      type: String,
      required: true
    }
  }
})
</script>
    ",
      ],
      "version": 3,
    },
  },
  "test.vue.ts" => Object {
    "map": Object {
      "file": "test.vue.ts",
      "sections": Array [
        Object {
          "map": Object {
            "file": "test.vue.script.transformed.ts",
            "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
            "names": Array [],
            "sources": Array [
              "test.vue.script.ts",
            ],
            "sourcesContent": Array [
              "
import { defineComponent } from 'vue'

export default defineComponent({
  props: {
    msg: {
      type: String,
      required: true
    }
  }
})
",
            ],
            "version": 3,
          },
          "offset": Object {
            "column": 0,
            "line": 2,
          },
        },
        Object {
          "map": Object {
            "file": "test.vue.template.compiled.transformed.ts",
            "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA",
            "names": Array [],
            "sources": Array [
              "test.vue.template.compiled.ts",
            ],
            "sourcesContent": Array [
              "import { toDisplayString as _toDisplayString, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \\"vue\\"

export function render(_ctx, _cache) {
  return (_openBlock(), _createBlock(\\"div\\", null, [
    _createVNode(\\"h1\\", null, _toDisplayString(_ctx.msg), 1 /* TEXT */)
  ]))
}",
            ],
            "version": 3,
          },
          "offset": Object {
            "column": 0,
            "line": 28,
          },
        },
      ],
      "version": "3",
    },
  },
}
`;
